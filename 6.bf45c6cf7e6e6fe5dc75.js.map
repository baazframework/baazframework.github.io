{"version":3,"sources":["webpack:///./src/components/Cli/cli.js","webpack:///./src/components/Cli/cli.scss","webpack:///./src/util/makeUrl.js","webpack:///./src/components/Cli/cli.scss?319e"],"names":["Overview","props","className","href","resourceUrl","exports","___CSS_LOADER_API_IMPORT___","push","module","i","htmlDataset","document","querySelector","dataset","imageOptimizingOrigin","mediaBackend","useBackendForImgs","absoluteUrl","joinUrls","base","url","endsWith","slice","startsWith","mediaBases","Map","set","makeOptimizedUrl","path","type","opts","origin","window","location","isAbsolute","test","backendURL","process","env","BACKEND_URL","baseURL","URL","has","mediaBase","get","pathname","includes","length","params","URLSearchParams","search","Object","entries","forEach","key","value","toString","api","content","__esModule","default","options","locals"],"mappings":";;AAGA,MAAMA,SAAWC,GAGT,6BACI,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,aACX,+CACA,yVAIA,oDACA,8EACoD,uBAAGC,KAAMC,YAAY,uBAArB,oBADpD,cAEI,uBAAGD,KAAMC,YAAY,uBAArB,0BAFJ,sCAGI,6BAHJ,iCAKI,8BAGJ,2BACI,6BACI,+DAGR,oJAGA,2BACI,6BACI,gEAEJ,6BACI,+DAGR,gDAGA,uEAGA,2BACI,6BACI,iDAGR,+CAGA,2BACI,6BACI,oDAGR,iDAGA,2BACI,6BACI,uD,EAUbJ;;AAAA,O,6FAtETA,S,yTCDNK,EADkC,EAAQ,OAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,EAAI,gCAAiC,KAE1DD,EAAOH,QAAUA,G;;;;;;;;;ACLjB,MAAMK,EAAcC,SAASC,cAAc,QAAQC,SAC7C,sBAAEC,GAA0BJ;AAElC,IAAIK,EAAeL,EAAYK;AAC1BA,IAEDA,EAAe;AAGnB,MAAMC,EAA8C,YAA1BF,EAGpBG,EAAc,wBAGdC,SAAW,CAACC,EAAMC,KACnBD,EAAKE,SAAS,KAAOF,EAAKG,MAAM,GAAI,GAAKH,GAC1C,KACCC,EAAIG,WAAW,KAAOH,EAAIE,MAAM,GAAKF,GAEpCI,GAAa,IAAIC,KAClBC,IAAI,gBAAiB,oBACrBA,IAAI,iBAAkB,qBA2BrBC,iBAAmB,CAACC,EAAM,EAAoB,MAAO,IAA3B,KAAEC,GAAyB,EAAhBC,EAAgB;AAEvD,IAAKD,IAASA,EAAKN,WAAW,UAC1B,OAAOK;AAGX,MAAM,OAAEG,GAAWC,OAAOC,SACpBC,EAAajB,EAAYkB,KAAKP,GAC9BQ,EAAaC,EAAQC,IAAIC;AAC/B,IAAIC,EAAU,IAAIC,IAAIb,EAAMb;AAG5B,IAAKmB,GAAcV,EAAWkB,IAAIb,GAAO,CACrC,MAAMc,EAAYnB,EAAWoB,IAAIf;AAC5BW,EAAQK,SAASC,SAASH,KAC3BH,EAAU,IAAIC,IAAIvB,SAASyB,EAAWf,GAAOb,IAIjDyB,EAAQrC,KAAKoB,WAAWa,KAAgBpB,IAExCwB,EAAU,IAAIC,IAAID,EAAQrC,KAAKmB,MAAMc,EAAWW,QAAShB;AAI7D,MAAMiB,EAAS,IAAIC,gBAAgBT,EAAQU;AAS3C,OARAF,EAAOtB,IAAI,OAAQ,QACnBsB,EAAOtB,IAAI,SAAU,QACrByB,OAAOC,QAAQtB,GAAMuB,QAAQ,EAAEC,EAAKC,MAC5BA,SACAP,EAAOtB,IAAI4B,EAAKC,KAGxBf,EAAQU,OAASF,EAAOQ,WACpBhB,EAAQT,SAAWA,EACZS,EAAQrC,KAAKmB,MAAMkB,EAAQT,OAAOgB,QAEtCP,EAAQrC,M,EAGJwB;;AAAA,O,6FAzFTjB,E,wFACEI,E,kGAEJC,E,yFAMEC,E,8FAGAC,E,wFAGAC,S,qFAKAM,E,uFA6BAG,iB;;;;uGClDN,IAAI8B,EAAM,EAAQ,QACFC,EAAU,EAAQ;AAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAAClD,EAAOC,EAAIiD,EAAS;AAG9C,IAAIG,EAAU,CAEd,OAAiB,OACjB,WAAoB;AAEPJ,EAAIC,EAASG;AAI1BrD,EAAOH,QAAUqD,EAAQI,QAAU","file":"6.bf45c6cf7e6e6fe5dc75.js","sourcesContent":["import React from 'react';\nimport './cli.scss';\nimport { Link, resourceUrl } from '../../drivers/index';\nconst Overview = props => {\n\n    return (\n        <div >\n            <div className=\"overview-body\">\n                <div className=\"container\">\n                    <h1>Installing Baaz</h1>\n                    <p>\n                        Baaz are created and developed primarily through the Baaz command-line utility.\n                        The Baaz CLI is the preferred method of installation, as it offers a wide range of dev tools and help options along the way. It is also the main tool through which to run the app and connect it to other services, such as Baaz Appflow.\n                    </p>\n                    <h4>Install the Baaz CLI</h4>\n                    <p>\n                        Before proceeding, make sure your computer has  <a href={resourceUrl('/environment-setup')}>Node.js and Yarn</a> installed.\n                        <a href={resourceUrl('/environment-setup')}>See these instructions</a> to set up an environment for Baaz.\n                        <br />\n                        Install the Baaz CLI with npm:\n                        <br />\n\n                    </p>\n                    <p>\n                        <pre>\n                            <code>$ npm install -g  @baaz/cli</code>\n                        </pre>\n                    </p>\n                    <p>\n                        If there was a previous installation of the Baaz CLI, it will need to be uninstalled due to a change in package name.\n                    </p>\n                    <p>\n                        <pre>\n                            <code>$ npm uninstall -g  @baaz/cli</code>\n                        </pre>\n                        <pre>\n                            <code>$ npm install -g  @baaz/cli</code>\n                        </pre>\n                    </p>\n                    <h6>\n                        Start an Project\n                    </h6>\n                    <p>\n                        Get started with the Baaz start command:\n                    </p>\n                    <p>\n                        <pre>\n                            <code>$ baaz --init</code>\n                        </pre>\n                    </p>\n                    <h6>\n                        Run the Project\n                    </h6>\n                    <p>\n                        <pre>\n                            <code>$ yarn run watch</code>\n                        </pre>\n                    </p>\n                    <h6>\n                        Build the Project\n                    </h6>\n                    <p>\n                        <pre>\n                            <code>$ yarn run build</code>\n                        </pre>\n                    </p>\n                </div>\n            </div>\n        </div >\n    );\n};\n\n\nexport default Overview;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".overview-body{margin:1rem 0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// If the root template supplies the backend URL at runtime, use it directly\nconst htmlDataset = document.querySelector('html').dataset;\nconst { imageOptimizingOrigin } = htmlDataset;\n// Protect against potential falsy values for `mediaBackend`.\nlet mediaBackend = htmlDataset.mediaBackend;\nif (!mediaBackend) {\n    console.warn('A media backend URL should be defined in your config.');\n    mediaBackend = 'https://backend.test/media/';\n}\n\nconst useBackendForImgs = imageOptimizingOrigin === 'backend';\n\n// Tests if a URL begins with `http:` or `https:` or `data:`\nconst absoluteUrl = /^(data|http|https)?:/i;\n\n// Simple path joiner that guarantees one and only one slash between segments\nconst joinUrls = (base, url) =>\n    (base.endsWith('/') ? base.slice(0, -1) : base) +\n    '/' +\n    (url.startsWith('/') ? url.slice(1) : url);\n\nconst mediaBases = new Map()\n    .set('image-product', 'catalog/product/')\n    .set('image-category', 'catalog/category/');\n\n/**\n * Creates an \"optimized\" url for a provided relative url based on\n * requested media type and width. Any image URLs (whose type begins with\n * \"image-\" will also be optimized.)\n *\n * If a `type` is provided the `path` will be joined with the associated media\n * base.\n *  - `catalog/product/path/to/img.jpg`\n *\n * If a `width` is provided, \"resize parameters\" are added to the URL for\n * middlewares (either onboard or backend) to return using the desired width\n * and original media url.\n *  - `catalog/product/path/to/img.jpg?width=500&auto=webp&format=pjpg\n *\n * If only `path` is provided it is returned unaltered.\n *\n * @param {string} path - absolute or relative url to resource.\n * @param {Object} props - properties describing desired optimizations\n * @param {string} props.type - \"image-product\" or \"image-category\"\n * @param {number} props.width - the desired resize width of the image\n * @param {number} props.height - the desired resize height of the image\n * @param {number} props.quality - the desired quality of the image\n * @param {bool} props.crop - should the image be cropped\n * @param {string} props.fit - how should the image be fit with the dimensions: bounds, cover, crop\n */\nconst makeOptimizedUrl = (path, { type, ...opts } = {}) => {\n    // Immediate return if there's no image optimization to attempt\n    if (!type || !type.startsWith('image-')) {\n        return path;\n    }\n\n    const { origin } = window.location;\n    const isAbsolute = absoluteUrl.test(path);\n    const backendURL = process.env.BACKEND_URL;\n    let baseURL = new URL(path, mediaBackend);\n\n    // If URL is relative and has a supported type, prepend media base onto path\n    if (!isAbsolute && mediaBases.has(type)) {\n        const mediaBase = mediaBases.get(type);\n        if (!baseURL.pathname.includes(mediaBase)) {\n            baseURL = new URL(joinUrls(mediaBase, path), mediaBackend);\n        }\n    }\n\n    if (baseURL.href.startsWith(backendURL) && !useBackendForImgs) {\n        // Replace URL base so optimization middleware can handle request\n        baseURL = new URL(baseURL.href.slice(backendURL.length), origin);\n    }\n\n    // Append image optimization parameters\n    const params = new URLSearchParams(baseURL.search);\n    params.set('auto', 'webp'); // Use the webp format if available\n    params.set('format', 'pjpg'); // Use progressive JPGs at least\n    Object.entries(opts).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n            params.set(key, value);\n        }\n    });\n    baseURL.search = params.toString();\n    if (baseURL.origin === origin) {\n        return baseURL.href.slice(baseURL.origin.length);\n    }\n    return baseURL.href;\n};\n\nexport default makeOptimizedUrl;","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ref--5-2!../../../node_modules/sass-loader/dist/cjs.js!./cli.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"sourceRoot":""}